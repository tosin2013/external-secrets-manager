openshift_token: 12345678
openshift_url: https://api.ocp4.example.com:6443
insecure_skip_tls_verify: true

install_vault: true
push_secrets: false 
vault_secrets_init: false # Set to true to initialize vault secrets


# Vault vaules
localClusterDomain: apps.foo.cluster.com
hubClusterDomain: apps.hub.example.com
clusterDomain: foo.example.com

# Secrets Path pattern_dir
pattern_dir: "{{ lookup('env', 'HOME') }}/external-secrets-manager"

## using "registry.connect.redhat.com/hashicorp/vault"
image_tag: 1.14.0-ubi

# Vault Helm chart version
vault_helm: 0.28.1
vault_helm_version: v{{ vault_helm }} # default v0.25.0
vault_helm_route_tag: vault-{{ vault_helm }} 

values_secret: "{{ lookup('env', 'HOME') }}/values-secret.yaml"
kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
kubeconfig_backup: "{{ lookup('env', 'HOME') }}/.kube/config"
vault_ns: "hashicorp-vault"
vault_pod: "hashicorp-vault-0"
vault_hub: "hub"
vault_pvc: "data-vault-0"
vault_hub_kubernetes_host: https://$KUBERNETES_PORT_443_TCP_ADDR:443
# Needs extra escaping due to how it gets injected via shell in the vault
vault_hub_capabilities: '[\\\"read\\\"]'
vault_base_path: "secret"
vault_path: "{{ vault_base_path }}/{{ vault_hub }}"
vault_hub_ttl: "15m"
vault_spoke_capabilities: '[\\\"read\\\"]'
vault_spoke_ttl: "15m"
vault_global_policy: global
vault_global_capabilities: '[\\\"read\\\"]'
external_secrets_ns: golang-external-secrets
external_secrets_sa: golang-external-secrets
external_secrets_secret: golang-external-secrets
unseal_secret: "vaultkeys"
unseal_namespace: "imperative"
