# Deploy vault using a helm chart
- name: Ensure HashiCorp Vault Helm repository is added
  community.kubernetes.helm_repository:
    name: hashicorp
    repo_url: https://helm.releases.hashicorp.com
    state: present
  when: install_vault | bool

- name: Ensure Helm chart is installed from HashiCorp Vault repository
  community.kubernetes.helm:
    name: hashicorp-vaulthelm
    chart_ref: vault
    chart_repo_url: https://helm.releases.hashicorp.com
    chart_version: "{{ vault_helm_version }}"
    release_namespace: hashicorp-vault
    create_namespace: true
    values: "{{ lookup('template', 'values.yaml') | from_yaml }}"
    state: present
  when: install_vault | bool

# Create Role for managing Route resources
- name: Ensure Role for managing Route resources is created
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: route-manager
        namespace: hashicorp-vault
      rules:
        - apiGroups: ["route.openshift.io"]
          resources: ["routes"]
          verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  when: install_vault | bool

# Create RoleBinding for the service account
- name: Ensure RoleBinding for the service account is created
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: route-manager-binding
        namespace: hashicorp-vault
      subjects:
        - kind: ServiceAccount
          name: default
          namespace: hashicorp-vault
      roleRef:
        kind: Role
        name: route-manager
        apiGroup: rbac.authorization.k8s.io
  when: install_vault | bool

# create openshift route from template 
- name: Ensure openshift route is created from template 
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'vault-route.yaml') | from_yaml }}"
  when: install_vault | bool

# sleep for 25 seconds to allow vault pod to be created
- name: Ensure sufficient wait time for vault pod to be created
  pause:
    seconds: 30
  when: install_vault | bool

# Create golang-external-secrets namespace 
- name: Ensure golang-external-secrets namespace is created
  community.kubernetes.k8s:
    state: present
    kind: Namespace
    name: golang-external-secrets
  when: install_vault | bool

# when install_vault is true set fact to apply the manifest using oc command
- name: Set fact to apply the manifest using oc command
  set_fact:
    use_oc_command: "apply"
  when: install_vault | bool

# when install_vault is false set fact to apply the manifest using oc command
- name: Set fact to apply the manifest using oc command
  set_fact:
    use_oc_command: "delete"
  when: not install_vault | bool


- name: Template a file to /tmp/external-secrets-vaules.yaml
  ansible.builtin.template:
    src: external-secrets-vaules.yaml.j2
    dest: /tmp/external-secrets-vaules.yaml

- name: Ensure Kubernetes manifest is applied using oc command
  ansible.builtin.shell: |
    helm template --values=/tmp/external-secrets-vaules.yaml \
    golang-external-secrets {{ playbook_dir }}/openshift/apps/golang-external-secrets \
    --namespace golang-external-secrets | oc {{ use_oc_command }} -f -
  delegate_to: localhost
  become: false
  ignore_errors: true

- name: Remove Helm chart from HashiCorp Vault repository
  community.kubernetes.helm:
    name: hashicorp-vault
    chart_ref: vault
    chart_repo_url: https://helm.releases.hashicorp.com
    release_namespace: hashicorp-vault
    create_namespace: true
    values:
      global:
        hubClusterDomain: "{{ hubClusterDomain }}"
    state: absent
  ignore_errors: yes
  when: not install_vault | bool

- name: Delete openshift route from template 
  community.kubernetes.k8s:
    state: absent
    definition: "{{ lookup('template', 'vault-route.yaml') | from_yaml }}"
  when: not install_vault | bool

# wait for vault pod to be deleted
- name: Wait for vault pod to be deleted
  community.kubernetes.k8s_info:
    kind: Pod
    api_version: v1
    namespace: hashicorp-vault
    label_selectors:
      - app.kubernetes.io/instance=hashicorp-vault
  register: vault_pod
  until: vault_pod.resources | length == 0
  retries: 30
  delay: 10
  when: not install_vault | bool

- name: Remove vault
  shell: |
    oc delete ClusterRoleBinding hashicorp-vault-server-binding
  ignore_errors: yes
  when: not install_vault | bool

# delete vault namespace
- name: Delete vault namespace
  community.kubernetes.k8s:
    state: absent
    kind: Namespace
    name: hashicorp-vault
  ignore_errors: yes
  when: not install_vault | bool

  # delete golang-external-secrets namespace
- name: Delete git namespace
  community.kubernetes.k8s:
    state: absent
    kind: Namespace
    name: golang-external-secrets
  ignore_errors: yes
  when: not install_vault | bool
